@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "_Layout";
    ViewData["Title"] = "Participant";
}
@model FromationForMedia

<div class="course-wrapper">
    <div class="sidebar">
        <div class="course-header">
            <span class="course-icon">📱</span>
            <span class="course-title">@Model.Titre</span>
            <span class="toggle-icon">❯</span>
        </div>

        <div class="lesson-list">
            @foreach (var media in Model.Media)
            {
                <div class="lesson-item @(media.Id == Model.Media.First().Id ? "active" : "")"
                     data-media-id="@media.Id"
                     onclick="changeVideo('@Uri.EscapeDataString(media.Url)', @media.Id, '@media.Title')">
                    <span class="lesson-status"></span>
                    <span class="lesson-name">@media.Title</span>
                </div>
            }

            <div>
                <span class="lesson-status"></span>
                @* <a asp-controller="CertificateController1" asp-action="CreateCertificate" *@
                @*    asp-route-formationId="@Model.Id" *@
                @*    asp-route-participantId="@ViewData["id_p"]" *@
                @*    asp-route-formationTitre="@Model.Titre" *@
                @*    class="btn btn-success"> *@
                @*     Compléter le cours *@
                @* </a> *@
                <p>Formation ID: @Model.Id</p>
                <p>Formation ID: @ViewData["id_p"]</p>
                <p>Formation ID: @Model.Titre</p>
                <a asp-controller="CertificateController1"
                   asp-action="CreateCertificate"
                   asp-route-formationId="@Model.Id"
                   asp-route-participantId="@ViewData["id_p"]"
                   asp-route-formationTitre="@Model.Titre"
                   class="btn btn-success">
                    Compléter le cours
                </a>

            </div>
        </div>
    </div>

    <div class="main-content">
        <div class="navigation-breadcrumb">
            @Model.Titre > @Model.Media.First().Title
        </div>

        <h1>@Model.Media.First().Title</h1>

        <div class="video-container">
            <video id="videoPlayer" controls>
                <source src="@Model.Media.First().Url" type="video/mp4">
            </video>
        </div>

        <div class="navigation-buttons">
            <a href="#" class="back-button">Back to Course</a>
            <a href="#" class="next-button" onclick="playNextLesson()">Next Lesson ❯</a>
        </div>
    </div>
</div>

<style>
    .course-wrapper {
        margin-top: 6rem;
        display: flex;
        min-height: 100vh;
    }

    .sidebar {
        width: 300px;
        background: white;
        border-right: 1px solid #e0e0e0;
    }

    .course-header {
        background: #008BB7;
        color: white;
        padding: 15px;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .course-title {
        flex: 1;
        font-weight: 500;
    }

    .lesson-list {
        padding: 20px 0;
    }

    .lesson-item {
        padding: 10px 20px;
        border-left: 3px solid transparent;
        cursor: pointer;
        transition: background-color 0.2s;
    }

        .lesson-item.active {
            border-left-color: #008BB7;
            background: #f5f9fa;
        }

        .lesson-item:hover {
            background-color: #f0f0f0;
        }

    .lesson-status {
        width: 12px;
        height: 12px;
        border: 2px solid #ddd;
        border-radius: 50%;
    }

    .active .lesson-status {
        background: #008BB7;
        border-color: #008BB7;
    }

    .main-content {
        flex: 1;
        padding: 20px 40px;
    }

    .navigation-breadcrumb {
        color: #666;
        margin-bottom: 20px;
    }

    .video-container {
        position: relative;
        padding-bottom: 56.25%;
        height: 0;
        overflow: hidden;
    }

        .video-container video {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }

    .navigation-buttons {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }

    .back-button, .next-button {
        padding: 10px 20px;
        text-decoration: none;
    }

    .next-button {
        background: #008BB7;
        color: white;
        border-radius: 4px;
    }
</style>

<script>
    function changeVideo(url, mediaId, title) {
        console.log('changeVideo called with:', url, mediaId, title);

        const decodedUrl = decodeURIComponent(url);
        console.log('Decoded URL:', decodedUrl);

        const videoPlayer = document.getElementById('videoPlayer');
        if (videoPlayer) {
            videoPlayer.src = decodedUrl;
            videoPlayer.load();
            videoPlayer.play().catch(error => {
                console.error('Error playing video:', error);
            });
        } else {
            console.error('Video player not found');
        }

        // Update UI
        document.querySelectorAll('.lesson-item').forEach(item => {
            item.classList.remove('active');
        });
        document.querySelector(`[data-media-id="${mediaId}"]`).classList.add('active');

        // Update breadcrumb and title
        const courseName = document.querySelector('.course-title').textContent;
        document.querySelector('.navigation-breadcrumb').textContent = `${courseName} > ${title}`;
        document.querySelector('h1').textContent = title;
    }

    function playNextLesson() {
        const currentLesson = document.querySelector('.lesson-item.active');
        if (!currentLesson) {
            console.error('No active lesson found');
            return;
        }

        const nextLesson = currentLesson.nextElementSibling;
        if (nextLesson && nextLesson.classList.contains('lesson-item')) {
            const url = nextLesson.getAttribute('onclick').split("'")[1];
            const mediaId = nextLesson.dataset.mediaId;
            const title = nextLesson.querySelector('.lesson-name').textContent;
            console.log('Playing next lesson:', url, mediaId, title);
            changeVideo(url, mediaId, title);
        } else {
            console.log('No next lesson found');
        }
    }
</script>